/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY

    private TreeNode createBBST(int[] A, int start, int end){

        if(start>end){
            return null;
        }

        int mid = (start+end)/2;
        
        TreeNode root = new TreeNode(A[mid]);
        root.left = createBBST(A, start, mid-1);
        root.right = createBBST(A, mid+1, end);

        return root;
    }
    public TreeNode sortedArrayToBST(final int[] A) {
        
        int size = A.length;

        TreeNode root = createBBST(A, 0, size-1);

        return root;
    }
}
